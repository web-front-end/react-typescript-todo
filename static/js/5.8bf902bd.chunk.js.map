{"version":3,"sources":["apis/todo.ts","components/footer/Footer.tsx","components/form/TodoForm.tsx","components/todo/TodoItem.tsx","components/todo/TodoList.tsx","components/index.ts","../node_modules/carbon-components-react/es/components/StructuredList/StructuredList.Skeleton.js","pages/TodoPage.tsx"],"names":["__webpack_require__","d","__webpack_exports__","addTodoAPI","deleteTodoAPI","listTodos","todo","cb","todos","JSON","parse","localStorage","getItem","arr","length","Object","assign","id","setItem","stringify","concat","filter","status","filterTodos","filteredTodos","isCompleted","Footer","props","todoAmount","react","className","Tag","type","disabled","Button","kind","small","TodoForm","state","title","desc","isTitleValid","isDescValid","changeHandler","e","target","name","value","defineProperty","_this","setState","submitHandler","preventDefault","addTodo","_this$state","trim","isAddLoading","this","_this$state2","onSubmit","FormGroup","legendText","TextInput","labelText","placeholder","hideLabel","invalidText","onChange","invalid","TextArea","iconDescription","InlineLoading","description","React","TodoItem","deleteTodo","console","log","StructuredList","noWrap","href","onClick","Icon","icon","iconDelete","TodoList","history","sortTodos","selection","border","head","iconCaretDown","push","iconAdd","react_addons_css_transition_group_default","a","transitionName","transitionAppear","transitionAppearTimeout","transitionEnterTimeout","transitionLeaveTimeout","component","map","todo_TodoItem","key","components_footer_Footer","TodoForm_TodoForm","components_todo_TodoList","_defineProperty","obj","enumerable","configurable","writable","prefix","StructuredList_Skeleton_StructuredListSkeleton","_ref","_classNames","rowCount","StructuredListSkeletonClasses","classnames_default","rows","i","react_default","createElement","propTypes","prop_types_default","number","bool","defaultProps","StructuredList_Skeleton","TodoPage","isLoading","_sortTodos","reverse","_deleteTodo","_this2","setTimeout","todoListProps","footerProps","clickFilterHandler","components"],"mappings":"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","file":"static/js/5.8bf902bd.chunk.js","sourcesContent":["import { Todo } from \"./../types/todo\";\n\nexport const addTodoAPI = (todo: Todo, cb: any) => {\n  const todos = JSON.parse(localStorage.getItem(\"todos\") as string);\n  let arr: Array<Todo> = [];\n  if (todos.length === 0) {\n    arr = [Object.assign({ id: 1 }, todo)];\n    localStorage.setItem(\"todos\", JSON.stringify(arr));\n  } else {\n    arr = todos.concat([\n      Object.assign({ id: todos[todos.length - 1].id + 1 }, todo)\n    ]);\n    localStorage.setItem(\"todos\", JSON.stringify(arr));\n  }\n  if (typeof cb === \"function\") {\n    cb(arr);\n  }\n};\n\nexport const deleteTodoAPI = (id: number, cb: any) => {\n  const todos = JSON.parse(localStorage.getItem(\"todos\") as string);\n  const arr = todos.filter(todo => todo.id !== id);\n  localStorage.setItem(\"todos\", JSON.stringify(arr));\n  if (typeof cb === \"function\") {\n    cb(arr);\n  }\n};\n\nexport const listTodos = (status: string, cb: any) => {\n  if (localStorage.getItem(\"todos\") === null) {\n    localStorage.setItem(\"todos\", JSON.stringify([]));\n  }\n  const todos = JSON.parse(localStorage.getItem(\"todos\") as string);\n  if (typeof cb === \"function\") {\n    cb(filterTodos(status, todos));\n  }\n};\n\nexport const updateTodo = (todo: Todo, cb: any) => {\n  let todos = JSON.parse(localStorage.getItem(\"todos\") as string);\n  for (let i = 0; i < todos.length; i++) {\n    if (todos[i].id === todo.id) {\n      todos[i] = todo;\n      break;\n    }\n  }\n  localStorage.setItem(\"todos\", JSON.stringify(todos));\n  cb(todos);\n};\n\nconst filterTodos = (status: string, todos: Array<Todo>) => {\n  let filteredTodos: Array<Todo> = [];\n  switch (status) {\n    case \"active\": {\n      filteredTodos = todos.filter(todo => todo.isCompleted !== true);\n      break;\n    }\n    case \"completed\": {\n      filteredTodos = todos.filter(todo => todo.isCompleted === true);\n      break;\n    }\n    default:\n      filteredTodos = todos;\n  }\n  return filteredTodos;\n};\n","import * as React from \"react\";\nimport { Button, Tag } from \"carbon-components-react\";\nimport \"./Footer.scss\";\n\nexport interface FooterProps {\n  todoAmount: Number;\n  clickFilterHandler: (event: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst Footer: React.FunctionComponent<FooterProps> = props => {\n  const {todoAmount} = props;\n  return (\n    <footer className=\"todo-footer\">\n      <Tag className=\"some-class\" type=\"blue\" disabled={false}>\n        {`Todo items ${todoAmount}`}\n      </Tag>\n      <div className=\"action\">\n        <Button kind=\"tertiary\" className=\"some-class\" small>\n          All\n        </Button>\n        <Button kind=\"tertiary\" className=\"some-class\" small>\n          Completed\n        </Button>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import * as React from \"react\";\nimport {\n  TextInput,\n  Form,\n  Button,\n  TextArea,\n  FormGroup,\n  InlineLoading\n} from \"carbon-components-react\";\nimport \"./TodoForm.scss\";\n\ninterface TodoFormProps {\n  addTodo: (title: string, desc: string) => void;\n  isAddLoading: boolean;\n}\n\ninterface TodoFormState {\n  title: string;\n  desc: string;\n  isTitleValid: boolean;\n  isDescValid: boolean;\n}\n\nexport default class TodoForm extends React.PureComponent<\n  TodoFormProps,\n  TodoFormState\n> {\n  state = {\n    title: \"\",\n    desc: \"\",\n    isTitleValid: false,\n    isDescValid: false\n  };\n  changeHandler = e => {\n    let target: any = e.target;\n    let name: string = target.name;\n    let value: string = target.value;\n    const state: any = {\n      [name]: value\n    };\n    this.setState(state);\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n    const { addTodo } = this.props;\n    const { title, desc } = this.state;\n    if (title.trim() === \"\") {\n      this.setState({\n        isTitleValid: true\n      });\n    } else if (desc.trim() === \"\") {\n      this.setState({\n        isDescValid: true\n      });\n    } else {\n      addTodo(title, desc);\n    }\n  };\n  render() {\n    const { isAddLoading } = this.props;\n    const { isTitleValid, isDescValid } = this.state;\n    return (\n      <form className=\"todo-form\" onSubmit={this.submitHandler}>\n        <FormGroup className=\"some-class\" legendText=\"\">\n          <TextInput\n            id=\"title\"\n            className=\"some-class\"\n            value={this.state.title}\n            labelText=\"Todo Title\"\n            name=\"title\"\n            type=\"\"\n            placeholder=\"Please input a todo title 😄\"\n            hideLabel={false}\n            invalidText=\"title can't be empty\"\n            onChange={this.changeHandler}\n            invalid={isTitleValid}\n          />\n        </FormGroup>\n        <FormGroup className=\"some-class\" legendText=\"\">\n          <TextArea\n            name=\"desc\"\n            className=\"some-class\"\n            hideLabel={false}\n            labelText=\"Todo Desc\"\n            invalidText=\"Desc can't be empty\"\n            placeholder=\"Todo Description\"\n            id=\"desc\"\n            value={this.state.desc}\n            onChange={this.changeHandler}\n            invalid={isDescValid}\n          />\n        </FormGroup>\n        <Button\n          kind=\"primary\"\n          className=\"some-class\"\n          iconDescription=\"Add Todo\"\n          small\n          type=\"submit\"\n        >\n          {isAddLoading ? <InlineLoading description=\"\" /> : \"Add Todo\"}\n        </Button>\n      </form>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  StructuredListRow,\n  StructuredListCell,\n  Icon\n} from \"carbon-components-react\";\nimport { iconDelete } from \"carbon-icons\";\nimport { Todo } from \"../../types/todo\";\n\ninterface TodoItemProps {\n  todo: Todo;\n  deleteTodo: (id: number) => void;\n}\n\nconst TodoItem: React.FunctionComponent<TodoItemProps> = props => {\n  const { todo, deleteTodo } = props;\n  const { id, title, desc } = todo;\n  React.useEffect(() => {\n    // Specify how to clean up after this effect:\n    console.log(`${todo.title} component is mounted`);\n    return function cleanup() {\n      console.log(`${todo.title} component is cleaned up`);\n    };\n  },[]);\n  return (\n    <StructuredListRow>\n      <StructuredListCell noWrap>{title}</StructuredListCell>\n      <StructuredListCell>{desc}</StructuredListCell>\n      <StructuredListCell>\n        <a\n          href=\"#\"\n          onClick={e => {\n            e.preventDefault();\n            deleteTodo(id);\n          }}\n        >\n          <Icon\n            className=\"bx--structured-list-svg\"\n            icon={iconDelete}\n            description=\"select an option\"\n          />\n        </a>\n      </StructuredListCell>\n    </StructuredListRow>\n  );\n};\n\nexport default TodoItem;\n","import * as React from \"react\";\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\nimport {\n  StructuredListRow,\n  StructuredListCell,\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  Icon\n} from \"carbon-components-react\";\nimport { iconAdd, iconCaretDown } from \"carbon-icons\";\nimport TodoItem from \"./TodoItem\";\nimport { Todo } from \"./../../types/todo\";\nimport \"./TodoList.scss\";\n\nexport interface TodoListProps {\n  todos: Todo[];\n  history: any;\n  deleteTodo: (id: number) => void;\n  sortTodos: () => void;\n}\n\nconst TodoList: React.FunctionComponent<TodoListProps> = props => {\n  const { todos, history, deleteTodo, sortTodos } = props;\n  return (\n    <StructuredListWrapper selection border>\n      <StructuredListHead>\n        <StructuredListRow head>\n          <StructuredListCell head>\n            Title &nbsp;\n            <a\n              href=\"#\"\n              onClick={e => {\n                e.preventDefault();\n                sortTodos();\n              }}\n            >\n              <Icon\n                className=\"icon-CaretSort\"\n                icon={iconCaretDown}\n                description=\"add a todo\"\n              />\n            </a>\n          </StructuredListCell>\n          <StructuredListCell head>Description</StructuredListCell>\n          <StructuredListCell head>\n            <a\n              href=\"#\"\n              onClick={e => {\n                e.preventDefault();\n                history.push(\"/form\");\n              }}\n            >\n              <Icon\n                className=\"icon-add\"\n                icon={iconAdd}\n                description=\"add a todo\"\n              />\n            </a>\n          </StructuredListCell>\n        </StructuredListRow>\n      </StructuredListHead>\n      <StructuredListBody>\n        <ReactCSSTransitionGroup\n          transitionName=\"todoitem\"\n          transitionAppear={true}\n          transitionAppearTimeout={500}\n          transitionEnterTimeout={500}\n          transitionLeaveTimeout={300}\n          component={React.Fragment}\n        >\n          {todos.length > 0 &&\n            todos.map((todo) => (\n              <TodoItem key={todo.id} todo={todo} deleteTodo={deleteTodo} />\n            ))}\n        </ReactCSSTransitionGroup>\n      </StructuredListBody>\n    </StructuredListWrapper>\n  );\n};\n\nexport default TodoList;\n","import {Footer} from './footer';\nimport {TodoForm} from './form';\nimport {TodoList} from './todo';\n\nexport {\n    Footer,\n    TodoForm,\n    TodoList\n}","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\n\nvar StructuredListSkeleton = function StructuredListSkeleton(_ref) {\n  var _classNames;\n\n  var rowCount = _ref.rowCount,\n      border = _ref.border;\n  var StructuredListSkeletonClasses = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefix, \"--skeleton\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--structured-list\"), true), _defineProperty(_classNames, \"\".concat(prefix, \"--structured-list--border\"), border), _classNames));\n  var rows = [];\n\n  for (var i = 0; i < rowCount; i++) {\n    rows.push(React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--structured-list-row\"),\n      key: i\n    }, React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--structured-list-td\")\n    }), React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--structured-list-td\")\n    }), React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--structured-list-td\")\n    })));\n  }\n\n  return React.createElement(\"section\", {\n    className: StructuredListSkeletonClasses\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-thead\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-row \").concat(prefix, \"--structured-list-row--header-row\")\n  }, React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-th\")\n  }, React.createElement(\"span\", null)), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-th\")\n  }, React.createElement(\"span\", null)), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-th\")\n  }, React.createElement(\"span\", null)))), React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--structured-list-tbody\")\n  }, rows));\n};\n\nStructuredListSkeleton.propTypes = {\n  /**\n   * number of table rows\n   */\n  rowCount: PropTypes.number,\n\n  /**\n   * Specify whether a border should be added to your StructuredListSkeleton\n   */\n  border: PropTypes.bool\n};\nStructuredListSkeleton.defaultProps = {\n  rowCount: 5,\n  border: false\n};\nexport default StructuredListSkeleton;","import * as React from \"react\";\nimport { StructuredListSkeleton } from \"carbon-components-react\";\nimport { Todo } from \"./../types/todo\";\nimport { TodoList, Footer } from \"./../components\";\nimport { TodoListProps } from \"./../components/todo/TodoList\";\nimport { listTodos, deleteTodoAPI } from \"./../apis/todo\";\n\ninterface TodoPageProps {\n  history: any;\n}\n\ninterface TodoPageState {\n  todos: Array<Todo>;\n  isLoading: boolean;\n}\n\nexport default class TodoPage extends React.PureComponent<\n  TodoPageProps,\n  TodoPageState\n> {\n  state: TodoPageState = {\n    todos: [],\n    isLoading: true\n  };\n\n  componentDidMount() {\n    // fetch list\n    setTimeout(() => {\n      listTodos(\"\", arr => {\n        this.setState({\n          todos: arr,\n          isLoading: false\n        });\n      });\n    }, 1000);\n  }\n\n  _sortTodos = () => {\n    const {todos} = this.state;\n    const arr = JSON.parse(JSON.stringify(todos)); // creat a copy\n    this.setState({\n      todos: arr.reverse()\n    })\n  };\n\n  _deleteTodo = id => {\n    deleteTodoAPI(id, todos => {\n      this.setState({ todos });\n    });\n  };\n\n  render() {\n    const { todos, isLoading } = this.state;\n    const { history } = this.props;\n    const todoListProps = {\n      todos,\n      history,\n      deleteTodo: this._deleteTodo,\n      sortTodos: this._sortTodos\n    } as TodoListProps;\n    const footerProps = {\n      todoAmount: todos.length,\n      clickFilterHandler: () => {}\n    };\n    return (\n      <article className=\"todo-container\">\n        {isLoading ? (\n          <StructuredListSkeleton />\n        ) : (\n          <TodoList {...todoListProps} />\n        )}\n        <Footer {...footerProps} />\n      </article>\n    );\n  }\n}\n"],"sourceRoot":""}