{"version":3,"sources":["apis/todo.ts","components/footer/Footer.tsx","components/form/TodoForm.tsx","components/todo/TodoItem.tsx","components/todo/TodoList.tsx","components/index.ts","pages/TodoPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["__webpack_require__","d","__webpack_exports__","addTodoAPI","deleteTodoAPI","listTodos","todo","cb","todos","JSON","parse","localStorage","getItem","arr","length","Object","assign","id","setItem","stringify","concat","filter","status","filterTodos","filteredTodos","isCompleted","Footer","props","todoAmount","react","className","Tag","type","disabled","Button","kind","small","TodoForm","state","title","desc","isTitleValid","isDescValid","changeHandler","e","target","name","value","defineProperty","_this","setState","submitHandler","preventDefault","addTodo","_this$state","trim","isAddLoading","this","_this$state2","onSubmit","FormGroup","legendText","TextInput","labelText","placeholder","hideLabel","invalidText","onChange","invalid","TextArea","iconDescription","InlineLoading","description","React","TodoItem","deleteTodo","StructuredList","noWrap","Icon","icon","iconDelete","onClick","TodoList","history","selection","border","head","iconAdd","push","map","todo_TodoItem","key","components_footer_Footer","TodoForm_TodoForm","components_todo_TodoList","TodoPage","isLoading","_deleteTodo","_this2","setTimeout","todoListProps","footerProps","clickFilterHandler","StructuredList_Skeleton","components","FormPage","lazy","then","bind","App","react_default","a","createElement","react_router_dom","react_router","exact","path","component","Component","fallback","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4ff25918.chunk.js","sourcesContent":["import { Todo } from \"./../types/todo\";\n\nexport const addTodoAPI = (todo: Todo, cb: any) => {\n  const todos = JSON.parse(localStorage.getItem(\"todos\") as string);\n  let arr: Array<Todo> = [];\n  if (todos.length === 0) {\n    arr = [Object.assign({ id: 1 }, todo)];\n    localStorage.setItem(\"todos\", JSON.stringify(arr));\n  } else {\n    arr = todos.concat([\n      Object.assign({ id: todos[todos.length - 1].id + 1 }, todo)\n    ]);\n    localStorage.setItem(\"todos\", JSON.stringify(arr));\n  }\n  if (typeof cb === \"function\") {\n    cb(arr);\n  }\n};\n\nexport const deleteTodoAPI = (id: number, cb: any) => {\n  const todos = JSON.parse(localStorage.getItem(\"todos\") as string);\n  const arr = todos.filter(todo => todo.id !== id);\n  localStorage.setItem(\"todos\", JSON.stringify(arr));\n  if (typeof cb === \"function\") {\n    cb(arr);\n  }\n};\n\nexport const listTodos = (status: string, cb: any) => {\n  if (localStorage.getItem(\"todos\") === null) {\n    localStorage.setItem(\"todos\", JSON.stringify([]));\n  }\n  const todos = JSON.parse(localStorage.getItem(\"todos\") as string);\n  if (typeof cb === \"function\") {\n    cb(filterTodos(status, todos));\n  }\n};\n\nexport const updateTodo = (todo: Todo, cb: any) => {\n  let todos = JSON.parse(localStorage.getItem(\"todos\") as string);\n  for (let i = 0; i < todos.length; i++) {\n    if (todos[i].id === todo.id) {\n      todos[i] = todo;\n      break;\n    }\n  }\n  localStorage.setItem(\"todos\", JSON.stringify(todos));\n  cb(todos);\n};\n\nconst filterTodos = (status: string, todos: Array<Todo>) => {\n  let filteredTodos: Array<Todo> = [];\n  switch (status) {\n    case \"active\": {\n      filteredTodos = todos.filter(todo => todo.isCompleted !== true);\n      break;\n    }\n    case \"completed\": {\n      filteredTodos = todos.filter(todo => todo.isCompleted === true);\n      break;\n    }\n    default:\n      filteredTodos = todos;\n  }\n  return filteredTodos;\n};\n","import * as React from \"react\";\nimport { Button, Tag } from \"carbon-components-react\";\nimport \"./Footer.scss\";\n\nexport interface FooterProps {\n  todoAmount: Number;\n  clickFilterHandler: (event: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst Footer: React.FunctionComponent<FooterProps> = props => {\n  const {todoAmount} = props;\n  return (\n    <footer className=\"todo-footer\">\n      <Tag className=\"some-class\" type=\"blue\" disabled={false}>\n        {`Todo items ${todoAmount}`}\n      </Tag>\n      <div className=\"action\">\n        <Button kind=\"tertiary\" className=\"some-class\" small>\n          All\n        </Button>\n        <Button kind=\"tertiary\" className=\"some-class\" small>\n          Completed\n        </Button>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import * as React from \"react\";\nimport {\n  TextInput,\n  Form,\n  Button,\n  TextArea,\n  FormGroup,\n  InlineLoading\n} from \"carbon-components-react\";\nimport \"./TodoForm.scss\";\n\ninterface TodoFormProps {\n  addTodo: (title: string, desc: string) => void;\n  isAddLoading: boolean;\n}\n\ninterface TodoFormState {\n  title: string;\n  desc: string;\n  isTitleValid: boolean;\n  isDescValid: boolean;\n}\n\nexport default class TodoForm extends React.PureComponent<\n  TodoFormProps,\n  TodoFormState\n> {\n  state = {\n    title: \"\",\n    desc: \"\",\n    isTitleValid: false,\n    isDescValid: false\n  };\n  changeHandler = e => {\n    let target: any = e.target;\n    let name: string = target.name;\n    let value: string = target.value;\n    const state: any = {\n      [name]: value\n    };\n    this.setState(state);\n  };\n\n  submitHandler = e => {\n    e.preventDefault();\n    const { addTodo } = this.props;\n    const { title, desc } = this.state;\n    if (title.trim() === \"\") {\n      this.setState({\n        isTitleValid: true\n      });\n    } else if (desc.trim() === \"\") {\n      this.setState({\n        isDescValid: true\n      });\n    } else {\n      addTodo(title, desc);\n    }\n  };\n  render() {\n    const { isAddLoading } = this.props;\n    const { isTitleValid, isDescValid } = this.state;\n    return (\n      <form className=\"todo-form\" onSubmit={this.submitHandler}>\n        <FormGroup className=\"some-class\" legendText=\"\">\n          <TextInput\n            id=\"title\"\n            className=\"some-class\"\n            value={this.state.title}\n            labelText=\"Todo Title\"\n            name=\"title\"\n            type=\"\"\n            placeholder=\"Please input a todo title 😄\"\n            hideLabel={false}\n            invalidText=\"title can't be empty\"\n            onChange={this.changeHandler}\n            invalid={isTitleValid}\n          />\n        </FormGroup>\n        <FormGroup className=\"some-class\" legendText=\"\">\n          <TextArea\n            name=\"desc\"\n            className=\"some-class\"\n            hideLabel={false}\n            labelText=\"Desc can't be empty\"\n            invalidText=\"Desc\"\n            placeholder=\"Todo Description\"\n            id=\"desc\"\n            value={this.state.desc}\n            onChange={this.changeHandler}\n            invalid={isDescValid}\n          />\n        </FormGroup>\n        <Button\n          kind=\"primary\"\n          className=\"some-class\"\n          iconDescription=\"Add Todo\"\n          small\n          type=\"submit\"\n        >\n          {isAddLoading ? <InlineLoading description=\"\" /> : \"Add Todo\"}\n        </Button>\n      </form>\n    );\n  }\n}\n","import * as React from \"react\";\nimport {\n  StructuredListRow,\n  StructuredListCell,\n  Icon\n} from \"carbon-components-react\";\nimport { iconDelete } from \"carbon-icons\";\nimport { Todo } from \"../../types/todo\";\n\ninterface TodoItemProps {\n  todo: Todo,\n  deleteTodo: (id: number) => void\n}\n\nconst TodoItem: React.FunctionComponent<TodoItemProps> = props => {\n  const { todo, deleteTodo } = props;\n  const {id, title, desc} = todo;\n  return (\n    <StructuredListRow>\n      <StructuredListCell noWrap>{title}</StructuredListCell>\n      <StructuredListCell>{desc}</StructuredListCell>\n      <StructuredListCell>\n        <Icon\n          className=\"bx--structured-list-svg\"\n          icon={iconDelete}\n          description=\"select an option\"\n          onClick={() => {\n            deleteTodo(id)\n          }}\n        />\n      </StructuredListCell>\n    </StructuredListRow>\n  );\n};\n\nexport default TodoItem;\n","import * as React from \"react\";\nimport {\n  StructuredListRow,\n  StructuredListCell,\n  StructuredListWrapper,\n  StructuredListHead,\n  StructuredListBody,\n  Icon\n} from \"carbon-components-react\";\nimport { iconAdd } from \"carbon-icons\";\nimport TodoItem from \"./TodoItem\";\nimport { Todo } from \"./../../types/todo\";\nimport \"./TodoList.scss\";\n\nexport interface TodoListProps {\n  todos: Todo[]\n  history: any\n  deleteTodo: (id: number) => void\n}\n\nconst TodoList: React.FunctionComponent<TodoListProps> = props => {\n  const { todos ,history, deleteTodo} = props;\n  return (\n    <StructuredListWrapper selection border>\n      <StructuredListHead>\n        <StructuredListRow head>\n          <StructuredListCell head>Title</StructuredListCell>\n          <StructuredListCell head>Description</StructuredListCell>\n          <StructuredListCell head>\n            <Icon\n              className=\"icon-add\"\n              icon={iconAdd}\n              description=\"add a todo\"\n              onClick={() => {\n                history.push('/form')\n              }}\n            />\n          </StructuredListCell>\n        </StructuredListRow>\n      </StructuredListHead>\n      <StructuredListBody>\n        {todos.length > 0 &&\n          todos.map(todo => <TodoItem key={todo.id} todo={todo} deleteTodo={deleteTodo} />)}\n      </StructuredListBody>\n    </StructuredListWrapper>\n  );\n};\n\nexport default TodoList;\n","import {Footer} from './footer';\nimport {TodoForm} from './form';\nimport {TodoList} from './todo';\n\nexport {\n    Footer,\n    TodoForm,\n    TodoList\n}","import * as React from \"react\";\nimport { StructuredListSkeleton } from \"carbon-components-react\";\nimport { Todo } from \"./../types/todo\";\nimport { TodoList, Footer } from \"./../components\";\nimport { TodoListProps } from \"./../components/todo/TodoList\";\nimport { listTodos, deleteTodoAPI } from \"./../apis/todo\";\n\ninterface TodoPageProps {\n  history: any;\n}\n\ninterface TodoPageState {\n  todos: Array<Todo>;\n  isLoading: boolean;\n}\n\nexport default class TodoPage extends React.PureComponent<\n  TodoPageProps,\n  TodoPageState\n> {\n  state: TodoPageState = {\n    todos: [],\n    isLoading: true\n  };\n\n  componentDidMount() {\n    // fetch list\n    setTimeout(() => {\n      listTodos(\"\", arr => {\n        this.setState({\n          todos: arr,\n          isLoading: false\n        });\n      });\n    }, 1000);\n  }\n\n  _deleteTodo = (id) =>{\n    deleteTodoAPI(id,(todos)=>{\n      this.setState({todos})\n    })\n  }\n\n\n  render() {\n    const { todos, isLoading } = this.state;\n    const { history } = this.props;\n    const todoListProps = {\n      todos,\n      history,\n      deleteTodo: this._deleteTodo\n    } as TodoListProps;\n    const footerProps = {\n      todoAmount: todos.length,\n      clickFilterHandler: () => {}\n    };\n    return (\n      <article className=\"todo-container\">\n        {isLoading ? (\n          <StructuredListSkeleton />\n        ) : (\n          <TodoList {...todoListProps} />\n        )}\n        <Footer {...footerProps} />\n      </article>\n    );\n  }\n}\n","import React, { Component, Suspense } from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport TodoPage from './pages/TodoPage';\n// import { TodoPage } from \"./pages\";\n\nconst FormPage = React.lazy(() => import(\"./pages/FormPage\"));\n\nconst LazyLoadingComponent = (Component: any) => {\n  return props => (\n    <Suspense fallback={<div>Loading...</div>}>\n      <Component {...props} />\n    </Suspense>\n  );\n};\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={TodoPage} />\n          <Route path=\"/form\" component={LazyLoadingComponent(FormPage)} />\n        </Switch>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './../node_modules/carbon-components/css/carbon-components.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}